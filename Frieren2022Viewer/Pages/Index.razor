@page "/"
@inject HttpClient Http

<PageTitle>フリーレン人気投票ツイート推移</PageTitle>

<h1>フリーレン人気投票ツイート推移</h1>

<p>フリーレン人気投票関連のツイートの収集結果です。</p>

@if (votes == null)
{
    <p><em>Loading...</em></p>
}
<BarChart @ref="totalChart" TItem="Vote" Options="@totalChartOptions" />

@code {
    private Vote[]? votes;

    BarChart<Vote> totalChart;
    private BarChartOptions totalChartOptions = new()
        {
            Parsing = new ChartParsing
            {
                XAxisKey = "target",
                YAxisKey = "count",
            }
        };

    private BarChartDataset<Vote> GetTotalDataset(Vote[]? _votes)
    {
        var totalData = _votes?
                .GroupBy(x => x.Target)
                .Select(x => new Vote { Target = x.Key, Count = x.Sum(y => y.Count) })
                .OrderByDescending(x => x.Count)
                .ToList() ?? new List<Vote>();

        return new()
            {
                Data = totalData
            };
    }

    protected override async Task OnInitializedAsync()
    {
        votes = await Http.GetFromJsonAsync<Vote[]>("votes.json");
        HandleRedraw();
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            HandleRedraw();
        }
    }

    private void HandleRedraw()
    {
        if (totalChart == null) { return; }
        totalChart.Clear();
        totalChart.AddDataSet(GetTotalDataset(votes));
    }

    public class Vote
    {
        public DateTimeOffset Timestamp { get; set; }
        public string? Target { get; set; }
        public int Count { get; set; }
    }
}
